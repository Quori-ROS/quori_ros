{"name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-service/f-exists","symbols":{"root/home/packages/astra_ros/astra_ros_api/n-ros/n-service/f-exists":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-service/f-exists","display_name":"exists","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Checks if a service is both advertised and available."},{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"service_name","direction":null,"children":[{"type":"text","text":" Name of the service to check for"},{"type":"text","text":" "}]},{"type":"paramcommand","index":1,"parameter":"print_failure_reason","direction":null,"children":[{"type":"text","text":" Whether to print the reason for failure to the console (service not advertised vs."},{"type":"text","text":" could not connect to the advertised host)"},{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" true if the service is up and available, false otherwise"}]}],"template_args":null,"params":[{"name":"service_name","ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"print_failure_reason","ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null}}],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false}}}