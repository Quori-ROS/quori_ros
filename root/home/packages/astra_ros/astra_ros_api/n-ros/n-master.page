{"name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master","symbols":{"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/V_TopicInfo":{"type":"typedef","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/V_TopicInfo","display_name":"V_TopicInfo","ty":{"kind":"elaborated","display_name":"std::vector<TopicInfo>","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"unexposed","display_name":"vector<ros::master::TopicInfo>","name":null,"const_qualified":false,"pointee":null,"elaborated":null}}},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/TopicInfo":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/TopicInfo","display_name":"TopicInfo","comment":null,"template_args":null,"params":[{"name":"_name","ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"_datatype","ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}}],"ret_ty":{"kind":"void","display_name":"void","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":"public","is_ctor":true,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getURI":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getURI","display_name":"getURI","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Get the full URI to the master (eg. http://host:port/)"}]}],"template_args":null,"params":[],"ret_ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo":{"type":"class","is_struct":true,"name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo","display_name":"TopicInfo","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Contains information retrieved from the master about a topic"}]}],"template_args":null,"children":["root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/datatype","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/name","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/TopicInfo"]},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-check":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-check","display_name":"check","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Check whether the master is up"}]},{"type":"paragraph","children":[{"type":"text","text":" This method tries to contact the master.  You can call it any time"},{"type":"text","text":" after ros::init has been called.  The intended usage is to check"},{"type":"text","text":" whether the master is up before trying to make other requests"},{"type":"text","text":" (subscriptions, advertisements, etc.)."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"returns","arguments":[],"children":[{"type":"text","text":" true if the master is available, false otherwise."}]}],"template_args":null,"params":[],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/name":{"type":"variable","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/name","display_name":"name","ty":{"kind":"elaborated","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"comment":[{"type":"paragraph","children":[{"type":"text","text":" Name of the topic"}]}],"visibility":"default","accessibility":"public"},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-setRetryTimeout":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-setRetryTimeout","display_name":"setRetryTimeout","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Set the max time this node should spend looping trying to connect to the master"},{"type":"text","text":" "}]},{"type":"paramcommand","index":null,"parameter":"The","direction":null,"children":[{"type":"text","text":" timeout.  A negative value means infinite"}]}],"template_args":null,"params":[{"name":"timeout","ty":{"kind":"elaborated","display_name":"ros::WallDuration","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"record","display_name":"ros::WallDuration","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/c-WallDuration","const_qualified":false,"pointee":null,"elaborated":null}}}],"ret_ty":{"kind":"void","display_name":"void","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getPort":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getPort","display_name":"getPort","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Get the port where the master runs."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" The master's port."}]}],"template_args":null,"params":[],"ret_ty":{"kind":"typedef","display_name":"uint32_t","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/datatype":{"type":"variable","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo/datatype","display_name":"datatype","ty":{"kind":"elaborated","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"comment":[{"type":"paragraph","children":[{"type":"text","text":" Datatype of the topic"}]}],"visibility":"default","accessibility":"public"},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master":{"type":"namespace","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master","display_name":"master","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Contains functions which allow you to query information about the master"}]}],"children":["root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getNodes","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-setRetryTimeout","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/V_TopicInfo","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getHost","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-check","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/s-TopicInfo","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getTopics","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getURI","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getPort","root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-execute"]},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getHost":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getHost","display_name":"getHost","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Get the hostname where the master runs."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" The master's hostname, as a string"}]}],"template_args":null,"params":[],"ret_ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getNodes":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getNodes","display_name":"getNodes","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Retreives the currently-known list of nodes from the master"}]}],"template_args":null,"params":[{"name":"nodes","ty":{"kind":"lvaluereference","display_name":"ros::V_string &","name":null,"const_qualified":false,"pointee":{"kind":"typedef","display_name":"ros::V_string","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"elaborated":null}}],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-execute":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-execute","display_name":"execute","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Execute an XMLRPC call on the master"}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"method","direction":null,"children":[{"type":"text","text":" The RPC method to invoke"},{"type":"text","text":" "}]},{"type":"paramcommand","index":1,"parameter":"request","direction":null,"children":[{"type":"text","text":" The arguments to the RPC call"},{"type":"text","text":" "}]},{"type":"paramcommand","index":2,"parameter":"response","direction":null,"children":[{"type":"text","text":" [out] The resonse that was received."},{"type":"text","text":" "}]},{"type":"paramcommand","index":3,"parameter":"payload","direction":null,"children":[{"type":"text","text":" [out] The payload that was received."},{"type":"text","text":" "}]},{"type":"paramcommand","index":4,"parameter":"wait_for_master","direction":null,"children":[{"type":"text","text":" Whether or not this call should loop until it can contact the master"}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" true if call succeeds, false otherwise."}]}],"template_args":null,"params":[{"name":"method","ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"request","ty":{"kind":"lvaluereference","display_name":"const XmlRpc::XmlRpcValue &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const XmlRpc::XmlRpcValue","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"record","display_name":"XmlRpc::XmlRpcValue","name":"root/home/packages/astra_ros/astra_ros_api/n-XmlRpc/c-XmlRpcValue","const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"response","ty":{"kind":"lvaluereference","display_name":"XmlRpc::XmlRpcValue &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"XmlRpc::XmlRpcValue","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"record","display_name":"XmlRpc::XmlRpcValue","name":"root/home/packages/astra_ros/astra_ros_api/n-XmlRpc/c-XmlRpcValue","const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"payload","ty":{"kind":"lvaluereference","display_name":"XmlRpc::XmlRpcValue &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"XmlRpc::XmlRpcValue","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"record","display_name":"XmlRpc::XmlRpcValue","name":"root/home/packages/astra_ros/astra_ros_api/n-XmlRpc/c-XmlRpcValue","const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"wait_for_master","ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null}}],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getTopics":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros/n-master/f-getTopics","display_name":"getTopics","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Get the list of topics that are being published by all nodes."}]},{"type":"paragraph","children":[{"type":"text","text":" This method communicates with the master to retrieve the list of all"},{"type":"text","text":" currently advertised topics."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"topics","direction":null,"children":[{"type":"text","text":" A place to store the resulting list.  Each item in the"},{"type":"text","text":" list is a pair "},{"type":"text","text":"<string"},{"type":"text","text":" topic, string type>.  The type is represented"},{"type":"text","text":" in the format \"package_name/MessageName\", and is also retrievable"},{"type":"text","text":" through message.__getDataType() or MessageName::__s_getDataType()."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" true on success, false otherwise (topics not filled in)"}]}],"template_args":null,"params":[{"name":"topics","ty":{"kind":"lvaluereference","display_name":"ros::master::V_TopicInfo &","name":null,"const_qualified":false,"pointee":{"kind":"typedef","display_name":"ros::master::V_TopicInfo","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"elaborated":null}}],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false}}}