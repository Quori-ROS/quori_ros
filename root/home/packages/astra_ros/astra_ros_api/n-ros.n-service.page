{"name":"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service","symbols":{"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.createClient":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.createClient","display_name":"createClient","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Create a client for a service."}]},{"type":"paragraph","children":[{"type":"text","text":" When the last handle reference of a persistent connection is cleared, the connection will automatically close."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"service_name","direction":null,"children":[{"type":"text","text":" The name of the service to connect to"},{"type":"text","text":" "}]},{"type":"paramcommand","index":1,"parameter":"persistent","direction":null,"children":[{"type":"text","text":" Whether this connection should persist.  Persistent services keep the connection to the remote host active"},{"type":"text","text":"        so that subsequent calls will happen faster.  In general persistent services are discouraged, as they are not as"},{"type":"text","text":"        robust to node failure as non-persistent services."},{"type":"text","text":" "}]},{"type":"paramcommand","index":2,"parameter":"header_values","direction":null,"children":[{"type":"text","text":" Key/value pairs you'd like to send along in the connection handshake"}]}],"template_args":null,"params":[],"ret_ty":{"kind":"record","display_name":"ros::ServiceClient","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.c-ServiceClient","const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service":{"type":"namespace","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service","display_name":"service","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Contains functions for querying information about and calling a service"}]}],"children":["root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.f-waitForService","root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.createClient","root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.f-exists","root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.call"]},"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.f-waitForService":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.f-waitForService","display_name":"waitForService","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Wait for a service to be advertised and available.  Blocks until it is."},{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"service_name","direction":null,"children":[{"type":"text","text":" Name of the service to wait for."},{"type":"text","text":" "}]},{"type":"paramcommand","index":1,"parameter":"timeout","direction":null,"children":[{"type":"text","text":" The amount of time to wait for before timing out.  If timeout is -1 (default),"},{"type":"text","text":" waits until the node is shutdown"},{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" true on success, false otherwise"}]}],"template_args":null,"params":[{"name":"service_name","ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"timeout","ty":{"kind":"elaborated","display_name":"ros::Duration","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"record","display_name":"ros::Duration","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.c-Duration","const_qualified":false,"pointee":null,"elaborated":null}}}],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.f-exists":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.f-exists","display_name":"exists","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Checks if a service is both advertised and available."},{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"service_name","direction":null,"children":[{"type":"text","text":" Name of the service to check for"},{"type":"text","text":" "}]},{"type":"paramcommand","index":1,"parameter":"print_failure_reason","direction":null,"children":[{"type":"text","text":" Whether to print the reason for failure to the console (service not advertised vs."},{"type":"text","text":" could not connect to the advertised host)"},{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" true if the service is up and available, false otherwise"}]}],"template_args":null,"params":[{"name":"service_name","ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"print_failure_reason","ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null}}],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.call":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.n-service.call","display_name":"call","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Invoke an RPC service."}]},{"type":"paragraph","children":[{"type":"text","text":" This method invokes an RPC service on a remote server, looking up the"},{"type":"text","text":" service location first via the master."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"service_name","direction":null,"children":[{"type":"text","text":" The name of the service."},{"type":"text","text":" "}]},{"type":"paramcommand","index":1,"parameter":"service","direction":null,"children":[{"type":"text","text":" The service class that contains the request and response messages"}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" true on success, false otherwise."}]}],"template_args":null,"params":[],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false}}}