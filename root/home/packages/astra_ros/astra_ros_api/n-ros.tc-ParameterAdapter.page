{"name":"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter","symbols":{"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Event":{"type":"typedef","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Event","display_name":"Event","ty":{"kind":"elaborated","display_name":"ros::MessageEvent<const Message>","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"unexposed","display_name":"MessageEvent<const ros::ParameterAdapter::Message>","name":null,"const_qualified":false,"pointee":null,"elaborated":null}}},"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Parameter":{"type":"typedef","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Parameter","display_name":"Parameter","ty":{"kind":"unexposed","display_name":"M","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.is_const":{"type":"variable","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.is_const","display_name":"is_const","ty":{"kind":"bool","display_name":"const bool","name":null,"const_qualified":true,"pointee":null,"elaborated":null},"comment":null,"visibility":"default","accessibility":"public"},"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.m-getParameter":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.m-getParameter","display_name":"getParameter","comment":null,"template_args":null,"params":[{"name":"event","ty":{"kind":"lvaluereference","display_name":"const ros::ParameterAdapter::Event &","name":null,"const_qualified":false,"pointee":{"kind":"typedef","display_name":"const ros::ParameterAdapter::Event","name":null,"const_qualified":true,"pointee":null,"elaborated":null},"elaborated":null}}],"ret_ty":{"kind":"typedef","display_name":"ros::ParameterAdapter::Parameter","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":"public","is_ctor":false,"is_dtor":false},"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter":{"type":"class","is_struct":false,"name":"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter","display_name":"ParameterAdapter<M>","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Generally not for outside use.  Adapts a function parameter type into the message type, event type and parameter.  Allows you to"},{"type":"text","text":" retrieve a parameter type from an event type."}]},{"type":"paragraph","children":[{"type":"text","text":" ParameterAdapter is generally only useful for outside use when implementing things that require message callbacks"},{"type":"text","text":" (such as the message_filters package)and you would like to support all the roscpp message parameter types"}]},{"type":"paragraph","children":[{"type":"text","text":" The ParameterAdapter is templated on the callback parameter type ("},{"type":"inlinecommand","command":"b","arguments":["not"],"style":"bold"},{"type":"text","text":" the bare message type), and provides 3 things:"},{"type":"text","text":"  - Message typedef, which provides the bare message type, no const or reference qualifiers"},{"type":"text","text":"  - Event typedef, which provides the ros::MessageEvent type"},{"type":"text","text":"  - Parameter typedef, which provides the actual parameter type (may be slightly different from M)"},{"type":"text","text":"  - static getParameter(event) function, which returns a parameter type given the event"},{"type":"text","text":"  - static bool is_const informs you whether or not the parameter type is a const message"}]},{"type":"paragraph","children":[{"type":"text","text":"  ParameterAdapter is specialized to allow callbacks of any of the forms:"}]},{"type":"verbatimcommand","parts":["void callback(const boost::shared_ptr<M const>&);","void callback(const boost::shared_ptr<M>&);","void callback(boost::shared_ptr<M const>);","void callback(boost::shared_ptr<M>);","void callback(const M&);","void callback(M);","void callback(const MessageEvent<M const>&);","void callback(const MessageEvent<M>&);"]},{"type":"paragraph","children":[{"type":"text","text":" "}]}],"template_args":null,"children":["root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Message","root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.m-getParameter","root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Event","root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Parameter","root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.is_const"]},"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Message":{"type":"typedef","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.tc-ParameterAdapter.Message","display_name":"Message","ty":{"kind":"unexposed","display_name":"typename boost::remove_reference<typename boost::remove_const<M>::type>::type","name":null,"const_qualified":false,"pointee":null,"elaborated":null}}}}