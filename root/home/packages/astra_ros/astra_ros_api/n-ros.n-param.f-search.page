{"name":"root/home/packages/astra_ros/astra_ros_api/n-ros.n-param.f-search","symbols":{"root/home/packages/astra_ros/astra_ros_api/n-ros.n-param.f-search":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.n-param.f-search","display_name":"search","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Search up the tree for a parameter with a given key.  This version defaults to starting in"},{"type":"text","text":" the current node's name"}]},{"type":"paragraph","children":[{"type":"text","text":" This function parameter server's searchParam feature to search up the tree for"},{"type":"text","text":" a parameter.  For example, if the parameter server has a parameter [/a/b]"},{"type":"text","text":" and you specify the namespace [/a/c/d], searching for the parameter \"b\" will"},{"type":"text","text":" yield [/a/b].  If [/a/c/d/b] existed, that parameter would be returned instead."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"key","direction":null,"children":[{"type":"text","text":" the parameter to search for"},{"type":"text","text":" "}]},{"type":"paramcommand","index":1,"parameter":"result","direction":"out","children":[{"type":"text","text":" the found value (if any)"}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" true if the parameter was found, false otherwise."},{"type":"text","text":" "}]},{"type":"blockcommand","command":"throws","arguments":[],"children":[{"type":"text","text":" InvalidNameException if the key is not a valid graph resource name"}]}],"template_args":null,"params":[{"name":"key","ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"result","ty":{"kind":"lvaluereference","display_name":"std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}}],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":null,"is_ctor":false,"is_dtor":false}}}