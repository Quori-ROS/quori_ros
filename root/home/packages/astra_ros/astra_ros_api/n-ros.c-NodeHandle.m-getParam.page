{"name":"root/home/packages/astra_ros/astra_ros_api/n-ros.c-NodeHandle.m-getParam","symbols":{"root/home/packages/astra_ros/astra_ros_api/n-ros.c-NodeHandle.m-getParam":{"type":"function","name":"root/home/packages/astra_ros/astra_ros_api/n-ros.c-NodeHandle.m-getParam","display_name":"getParam","comment":[{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"brief","arguments":[],"children":[{"type":"text","text":" Get a boolean map value from the parameter server."}]},{"type":"paragraph","children":[{"type":"text","text":" If you want to provide a default value in case the key does not exist use param()."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"paramcommand","index":0,"parameter":"key","direction":null,"children":[{"type":"text","text":" The key to be used in the parameter server's dictionary"},{"type":"text","text":" "}]},{"type":"paramcommand","index":1,"parameter":"map","direction":"out","children":[{"type":"text","text":" Storage for the retrieved value."}]},{"type":"paragraph","children":[{"type":"text","text":" "}]},{"type":"blockcommand","command":"return","arguments":[],"children":[{"type":"text","text":" true if the parameter value was retrieved, false otherwise"},{"type":"text","text":" "}]},{"type":"blockcommand","command":"throws","arguments":[],"children":[{"type":"text","text":" InvalidNameException If the parameter key begins with a tilde, or is an otherwise invalid graph resource name"}]}],"template_args":null,"params":[{"name":"key","ty":{"kind":"lvaluereference","display_name":"const std::string &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"const std::string","name":null,"const_qualified":true,"pointee":null,"elaborated":{"kind":"typedef","display_name":"std::string","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}},{"name":"map","ty":{"kind":"lvaluereference","display_name":"std::map<std::string, bool> &","name":null,"const_qualified":false,"pointee":{"kind":"elaborated","display_name":"std::map<std::string, bool>","name":null,"const_qualified":false,"pointee":null,"elaborated":{"kind":"unexposed","display_name":"map<std::string, bool>","name":null,"const_qualified":false,"pointee":null,"elaborated":null}},"elaborated":null}}],"ret_ty":{"kind":"bool","display_name":"bool","name":null,"const_qualified":false,"pointee":null,"elaborated":null},"visibility":"default","accessibility":"public","is_ctor":false,"is_dtor":false}}}